#BEGIN_LEGAL
#
#Copyright (c) 2023 Intel Corporation
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#  
#END_LEGAL
name: External Sanity

env:
  # XED minimal python version requirement
  MIN_PY_VER: "3.7.16"

on:
  pull_request:
    branches:
      - external
  workflow_dispatch:

jobs:
  init:
    runs-on:
      - self-hosted
      - xed-runners
      - Linux
    outputs:
      test_matrix: ${{ steps.load_matrix.outputs.matrix }}
    steps:
      - name: Checkout xed for reusable actions
        uses: actions/checkout@v3
      - name: Set test matrix
        id: load_matrix
        uses: ./.github/actions/load-matrix
        with:
          matrix_kind: nightly

  test:
    needs: init
    strategy:
          fail-fast: false
          matrix: ${{fromJson(needs.init.outputs.test_matrix)}}
    runs-on:
      - self-hosted
      - xed-runners
      - ${{ matrix.os }}
    steps:
    - name: Checkout xed
      uses: actions/checkout@v3
      with:
        path: xed
    - name: Checkout mbuild
      uses: actions/checkout@v3
      with:
        repository: intelxed/mbuild
        ref: main
        path: mbuild
        token: ${{ secrets.PAT }}
    - name: test
      run: |
          cd xed
          python3 .github/scripts/sanity_external.py --compiler=${{matrix.compiler}} --version=${{matrix.ver}}

  test_min_python_version:
    needs: init
    runs-on:
      - self-hosted
      - xed-runners
      - Linux
    steps:
    - name: Checkout xed
      uses: actions/checkout@v3
      with:
        path: xed
    - name: Checkout mbuild
      uses: actions/checkout@v3
      with:
        repository: intelxed/mbuild
        ref: main
        path: mbuild
        token: ${{ secrets.PAT }}

    - uses: actions/setup-python@v4
      with:
        python-version: ${{env.MIN_PY_VER}}
    - name: Parse python version setup
      id: python_ver
      run: echo "version=$(python3 --version)" >> $GITHUB_OUTPUT      
    - name: 'Test ${{ steps.python_ver.outputs.version }}'
      run: |
        cd xed
        python3 .github/scripts/sanity_external.py

  # Malware scan
  anti_virus_scan:
    needs: init
    runs-on:
      - self-hosted
      - xed-runners
      - Linux
    env:
      AV_SCAN_PATH: ${{ secrets.AV_SCAN_PATH }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        path: xed
        fetch-depth: 0
    - name: Checkout mbuild
      uses: actions/checkout@v3
      with:
        repository: intel-innersource/libraries.isa.xed.mbuild
        ref: ${{ needs.init.outputs.mbuild_branch }}
        path: mbuild
        token: ${{ secrets.PAT }}
    - name: anti-virus check
      run: |
          cd xed
          python3 .github/scripts/antivirus_scan.py --path "${AV_SCAN_PATH}"
    - name: upload full results # uploads anti-virus scan results as artifact
      id: upload
      uses: actions/upload-artifact@v3
      with:
        name: anti-virus-sum
        path: xed/logs/avscan.txt
    - name: add comment   # uploads anti-virus scan summary as pull-request comment
      uses: actions/github-script@v6
      if: github.event_name == 'pull_request'   # add scan summary as comment only if there is a PR
      with:
        script: |
          const fs = require('fs');
          const antivirusSummary = fs.readFileSync('xed/logs/antivirus_summary.txt', 'utf8');
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: "Anti-virus scan summary: " + antivirusSummary
          })
